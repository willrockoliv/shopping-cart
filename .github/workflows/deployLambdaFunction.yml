name: Deploy Shopping Cart API on Lamnda Function

permissions:
  id-token: write
  contents: read

on:
  push:
    paths:
      - "shopping_cart_api/**"
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.2'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry config virtualenvs.in-project true && poetry install
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        env:
          SNS_TARGET_ARN: ${{ secrets.SNS_TARGET_ARN }}
        run: |
          source .venv/bin/activate
          pytest tests/
          coverage report
      #----------------------------------------------
      #              Install zip tool
      #----------------------------------------------
      - name: Install zip tool
        uses: montudor/action-zip@v1
      #----------------------------------------------
      #     Create zip file for Lambda Function
      #----------------------------------------------
      - name: Create zip file for Lambda Function
        run: |
          poetry install --only main --sync
          rm -rf dist/
          mkdir -p dist/lambda-package
          cp -Rv .venv/lib/python*/site-packages/* dist/lambda-package/
          cp -Rv shopping_cart_api/ dist/lambda-package/
          cd dist/lambda-package
          zip ../aws_lambda_artifact.zip -r .
      #----------------------------------------------
      #          Configure AWS Credentials
      #----------------------------------------------
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_FOR_GIT_HUB_ACTIONS_DEPLOYMENT }}
          role-duration-seconds: 900
          aws-region: us-east-1
      #----------------------------------------------
      #                  Deploy
      #----------------------------------------------
      - name: AWS CLI v2
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: "lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_ARN }} \
            --zip-file fileb://dist/aws_lambda_artifact.zip"